CREATE TABLE User (
    UserID INTEGER PRIMARY KEY AUTOINCREMENT,
    Role TEXT CHECK(Role IN ('admin','assistant','donor')) NOT NULL,
    FirstName TEXT NOT NULL,
    LastName TEXT NOT NULL,
    Email TEXT UNIQUE NOT NULL,
    Password TEXT NOT NULL,
    CNP CHAR(13) UNIQUE NOT NULL
);

CREATE TABLE Authentication (
    AuthID INTEGER PRIMARY KEY AUTOINCREMENT,
    UserID INTEGER NOT NULL,
    is_logged_in BOOLEAN DEFAULT FALSE,
    FOREIGN KEY (UserID) REFERENCES User(UserID)
);



CREATE TABLE Admin (
    AdminID INTEGER PRIMARY KEY AUTOINCREMENT,
    UserID INTEGER NOT NULL,
    FOREIGN KEY(UserID) REFERENCES User(UserID) ON DELETE CASCADE
);

CREATE TABLE Assistant (
    AssistantID INTEGER PRIMARY KEY AUTOINCREMENT,
    UserID INTEGER NOT NULL,
    FOREIGN KEY(UserID) REFERENCES User(UserID) ON DELETE CASCADE
);

CREATE TABLE Donor (
    DonorID INTEGER PRIMARY KEY AUTOINCREMENT,
    UserID INTEGER NOT NULL,
    BloodGroup TEXT NOT NULL,
    Age INTEGER NOT NULL,         -- Modificat din VARCHAR(3) Ã®n INTEGER
    Gender TEXT NOT NULL,
    FOREIGN KEY(UserID) REFERENCES User(UserID) ON DELETE CASCADE
);

CREATE TABLE Donation (
    DonationID INTEGER PRIMARY KEY AUTOINCREMENT,
    DonorID INTEGER NOT NULL,
    AssistantID INTEGER,
    BloodGroup TEXT NOT NULL,
    Quantity INTEGER CHECK (Quantity > 0),
    DonationDate DATE NOT NULL,
    Status TEXT CHECK(Status IN ('pending', 'completed', 'returned')) DEFAULT 'pending'
    FOREIGN KEY(DonorID) REFERENCES Donor(DonorID) ON DELETE CASCADE,
    FOREIGN KEY(AssistantID) REFERENCES Assistant(AssistantID) ON DELETE SET NULL
);

CREATE TABLE BloodStock (
    BloodGroup TEXT PRIMARY KEY NOT NULL,
    QuantityInStock INTEGER DEFAULT 0
);

CREATE TABLE Schedule (
    ScheduleID INTEGER PRIMARY KEY AUTOINCREMENT,
    DonorID INTEGER NOT NULL,
    AppointmentDate DATETIME NOT NULL,
    Status TEXT CHECK(Status IN ('pending', 'canceled')) DEFAULT 'pending',
    FOREIGN KEY(DonorID) REFERENCES Donor(DonorID) ON DELETE CASCADE
);

CREATE TABLE Reward (
    RewardID INTEGER PRIMARY KEY AUTOINCREMENT,
    DonorID INTEGER NOT NULL,
    RewardDescription TEXT NOT NULL,
    RewardDate DATE NOT NULL,
    FOREIGN KEY(DonorID) REFERENCES Donor(DonorID) ON DELETE CASCADE
);

CREATE TABLE EligibilityForm (
    FormID INTEGER PRIMARY KEY AUTOINCREMENT,
    DonorID INTEGER NOT NULL,
    BloodGroup TEXT NOT NULL,
    Age INTEGER NOT NULL,         
    Gender TEXT NOT NULL,
    Weight INTEGER NOT NULL,       
    Notes TEXT NOT NULL,
    IsEligible BOOLEAN DEFAULT TRUE,
    FOREIGN KEY(DonorID) REFERENCES Donor(DonorID) ON DELETE CASCADE
);

CREATE TABLE Report (
    ReportID INTEGER PRIMARY KEY AUTOINCREMENT,
    AssistantID INTEGER NOT NULL,
    DonationID INTEGER NOT NULL,
    ReportType TEXT NOT NULL,
    ReportData TEXT NOT NULL,
    FOREIGN KEY(AssistantID) REFERENCES Assistant(AssistantID) ON DELETE SET NULL,
    FOREIGN KEY(DonationID) REFERENCES Donation(DonationID) ON DELETE SET NULL
);

CREATE TABLE Notification (
    NotificationID INTEGER PRIMARY KEY AUTOINCREMENT,
    DonorID INTEGER,
    NotificationType TEXT NOT NULL,
    Message TEXT NOT NULL,
    FOREIGN KEY(DonorID) REFERENCES Donor(DonorID) ON DELETE CASCADE
);

CREATE TABLE ActivityLog (
    ActivityLogID INTEGER PRIMARY KEY AUTOINCREMENT,
    UserID INTEGER NOT NULL,
    Action TEXT NOT NULL,
    FOREIGN KEY(UserID) REFERENCES User(UserID) ON DELETE CASCADE
);
